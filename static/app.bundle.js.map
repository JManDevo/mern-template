{"version":3,"sources":["webpack:///./src/App.jsx","webpack:///./src/StudentList.jsx","webpack:///./src/StudentAdd.jsx","webpack:///./src/StudentFilter.jsx","webpack:///./src/StudentEdit.jsx"],"names":["contentNode","document","getElementById","NoMatch","App","props","children","propTypes","PropTypes","object","isRequired","RoutedApp","render","module","hot","accept","StudentList","state","students","createStudent","bind","setFilter","query","router","push","apthname","location","pathname","loadData","prevProps","oldQuery","newQuery","belt","fetch","search","then","response","json","console","log","data","_metadata","total_count","records","forEach","student","name","setState","catch","err","newStudent","method","headers","body","JSON","stringify","ok","updatedStudent","newStudents","concat","alert","error","message","Component","StudentRow","_id","substr","appearances","StudentTable","studentRows","map","StudentAdd","handleSubmit","e","preventDefault","form","forms","studentAdd","value","StudentFilter","initFilter","changed","onChangeBelt","applyFilter","resetFilter","clearFilter","newProps","target","newFilter","Seperator","func","StudentEdit","onChange","params","id","event","Object","assign","resonse"],"mappings":"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","file":"app.bundle.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, Router, Redirect, browserHistory, withRouter, IndexRoute, IndexRedirect} from 'react-router';\nimport StudentList from './StudentList.jsx';\nimport StudentEdit from './StudentEdit.jsx';\n\nconst contentNode = document.getElementById('contents');\nconst NoMatch = () => <p>Page not found</p>;\nconst App = (props) => (\n    <div>\n        <div className=\"header\">\n            <h1>Students</h1>\n        </div>\n        <div className=\"contents\">\n            {props.children}\n        </div>\n        <div className=\"footer\">\n            Copyright (c) Joseph Man\n        </div>\n    </div>\n)\n\nApp.propTypes = {\n   children: React.PropTypes.object.isRequired,\n}\n\nconst RoutedApp = () => (\n    <Router history={browserHistory}>\n\n        <Route path =\"/\" component={App}>\n            <IndexRedirect to=\"/students\" />\n            <Route path=\"/students\" component={withRouter(StudentList)}/>\n            <Route path=\"/students/:id\" component={StudentEdit}/>\n            <Route path=\"*\" component={NoMatch}/>\n        </Route>\n    </Router>\n);\nReactDOM.render(<RoutedApp/>, contentNode);\n\nif (module.hot) {\n    module.hot.accept();\n}\n\n\n// WEBPACK FOOTER //\n// ./src/App.jsx","import React from 'react';\nimport 'whatwg-fetch';\nimport {Link} from 'react-router';\nimport StudentAdd from './StudentAdd.jsx';\nimport StudentFilter from './StudentFilter.jsx';\n\nexport  default class StudentList extends React.Component {\n\n    constructor() {\n        super();\n        this.state = { students: []};\n\n        this.createStudent = this.createStudent.bind(this);\n        this.setFilter = this.setFilter.bind(this);\n    }\n\n    setFilter(query) {\n        this.props.router.push({apthname:this.props.location.pathname, query})\n    }\n\n    componentDidMount() {\n        this.loadData();\n    }\n\n    componentDidUpdate(prevProps) {\n        const oldQuery = prevProps.location.query;\n        const newQuery = this.props.location.query;\n        if (oldQuery.belt === newQuery.belt) {\n            return;\n        }\n        this.loadData();\n    }\n\n    loadData() {\n        fetch(`api/students${this.props.location.search}`)\n            .then(response => response.json())\n            .then(data => {\n                console.log (\"Toal number of students: \", data._metadata.total_count);\n                data.records.forEach(student => {\n                    student.name = student.name;\n                });\n                this.setState({students:data.records});\n            }).catch(err => {\n            console.log(err);\n        })\n    }\n\n    createStudent(newStudent) {\n        fetch('/api/students',{\n            method:'POST',\n            headers: {'Content-Type':'application/json'},\n            body:JSON.stringify(newStudent),\n        }).then(response => {\n\n            if (response.ok) {\n                response.json().then(updatedStudent => {\n                    updatedStudent.name = updatedStudent.name;\n                    if (updatedStudent.name)\n                        updatedStudent.name = updatedStudent.name;\n\n                    const newStudents = this.state.students.concat(updatedStudent);\n                    this.setState({students: newStudents});\n                });\n            } else {\n                response.json().then(error => {\n                    alert(\"failed to add student \" + error.message)\n                });\n            }\n        }).catch(err => {\n            alert(\"error in sending data to server: \" + err.message);\n        });\n\n    }\n\n    render () {\n        return (\n            <div>\n\n                <h1>Student Tracker</h1>\n                <hr />\n                <StudentFilter setFilter={this.setFilter} initFilter={this.props.location.query} />\n                <hr />\n                <StudentTable students={this.state.students} />\n                <hr />\n                <StudentAdd createStudent={this.createStudent} />\n\n            </div>\n        );\n    }\n}\n\nconst StudentRow = (props) => {\n\n    const student = props.student;\n    return (\n        <tr>\n            <td><Link to={`/students/${props.student._id}`}>{props.student._id.substr(-4)}</Link></td>\n            <td>{student.belt}</td>\n            <td>{student.name}</td>\n            <td>{student.appearances}</td>\n        </tr>\n    );\n\n};\n\nfunction StudentTable (props) {\n\n    const studentRows = props.students.map(student => <StudentRow key={student._id} student={student} />)\n    return (\n        <table className=\"bordered-table\">\n            <thead>\n            <tr>\n                <th>ID</th>\n                <th>Belt</th>\n                <th>Name</th>\n                <th>Appearances</th>\n            </tr>\n            </thead>\n            <tbody>\n            {studentRows}\n            </tbody>\n        </table>\n    );\n\n}\n\nStudentList.propTypes = {\n    location:React.PropTypes.object.isRequired,\n    router:React.PropTypes.object,\n};\n\n\n// WEBPACK FOOTER //\n// ./src/StudentList.jsx","import React from 'react';\nexport default class StudentAdd extends React.Component {\n\n    constructor() {\n        super();\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        var form = document.forms.studentAdd;\n        this.props.createStudent({\n            belt: form.belt.value,\n            name: form.name.value,\n            appearances: form.appearances.value,\n        });\n        form.name.value = \"\";\n        form.belt.value = \"\";\n        form.appearances.value = \"\";\n    }\n\n    render () {\n        return (\n            <div>\n                <form name=\"studentAdd\" onSubmit={this.handleSubmit}>\n                    <input type=\"text\" name=\"name\" placeholder=\"Students Name\" />\n                    <select name=\"belt\">\n                        <option value=\"\">--- SELECT A GRADE ---</option>\n                        <option value=\"White\">White</option>\n                        <option value=\"Yellow\">Yellow</option>\n                        <option value=\"Orange\">Orange</option>\n                    </select>\n                    <input type=\"text\" name=\"appearances\" placeholder=\"Students Appearances\" />\n                    <button>Add</button>\n                </form>\n            </div>\n        );\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/StudentAdd.jsx","import React from 'react';\nimport {Link} from 'react-router';\nexport default class StudentFilter extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            belt: props.initFilter.belt || '',\n            changed:false,\n        };\n\n        this.onChangeBelt = this.onChangeBelt.bind(this);\n        this.applyFilter = this.applyFilter.bind(this);\n        this.resetFilter = this.resetFilter.bind(this);\n        this.clearFilter = this.clearFilter.bind(this);\n\n    }\n\n    componentWillReceiveProps(newProps) {\n        this.setState({\n            belt:newProps.initFilter.belt || '',\n            changed:false,\n        });\n    }\n\n    resetFilter() {\n        this.setState({\n            belt: this.props.initFilter.belt || '',\n            changed: false,\n        })\n    }\n\n    /*clearFilter(e){\n        e.preventDefault();\n        this.props.setFilter({});\n\n    }*/\n\n    setFilterWhite(e){\n        e.preventDefault();\n        this.props.setFilter({belt:\"White\"});\n    }\n\n    setFilterYellow(e){\n        e.preventDefault();\n        this.props.setFilter({belt:\"Yellow\"});\n    }\n\n    onChangeBelt(e) {\n        this.setState({belt:e.target.value,changed:true});\n    }\n\n    applyFilter() {\n        const newFilter = {};\n        if (this.state.belt) newFilter.belt = this.state.belt;\n        this.props.setFilter(newFilter);\n    }\n\n    clearFilter () {\n        this.props.setFilter({});\n    }\n\n    render () {\n        const Seperator = () => <span> | </span>;\n        return (\n            <div>\n                Belt:\n                <select value={this.state.belt} onChange={this.onChangeBelt}>\n                    <option value=\"\">(All Grades)</option>\n                    <option value=\"White\">White</option>\n                    <option value=\"Yellow\">Yellow</option>\n                    <option value=\"Orange\">Orange</option>\n                </select>\n\n\n                <button onClick={this.clearFilter}>Clear</button>\n                <button onClick={this.resetFilter}>Reset</button>\n                <button onClick={this.applyFilter}>Apply</button>\n\n\n            </div>\n        );\n    }\n}\nStudentFilter.propTypes = {\n    setFilter:React.PropTypes.func.isRequired,\n    initFilter: React.PropTypes.object.isRequired,\n}\n\n\n// WEBPACK FOOTER //\n// ./src/StudentFilter.jsx","import React from 'react';\nimport {Link} from 'react-router';\n\nexport default class StudentEdit extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            student: {\n                _id: '',name:'',belt:'',appearances:'',\n            },\n        };\n        this.onChange = this.onChange.bind(this);\n    }\n\n    componentDidMount() {\n        this.loadData();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.params.id !== this.props.params.id) {\n            this.loadData();\n        }\n    }\n    onChange(event) {\n        const student = Object.assign({},this.state.student);\n        student[event.target.name] = event.target.value;\n        this.setState(student);\n    }\n    loadData() {\n        fetch(`/api/students/${this.props.params.id}`).then(response => {\n            if (response.ok) {\n                response.json().then(student => {\n                    this.setState({student});\n                });\n            } else {\n                resonse.json().then(error => {\n                    alert(`Dailed to fetch student: ${error.message}`);\n                });\n            }\n        }).catch(err=> {\n            alert(`Error in fetching data from server: ${err.message}`);\n        });\n    }\n    render() {\n        const student= this.state.student;\n        return (\n            <div>\n                <form>\n                    ID: {student._id}\n                    <br/>\n                    Belt:\n                    <select name=\"belt\" value={student.belt} onChange={this.onChange}>\n                        <option value=\"White\">White</option>\n                        <option value=\"Yellow\">Yellow</option>\n                        <option value=\"Orange\">Orange</option>\n                    </select>\n                    Name: <input name=\"name\" value={student.name} onChange={this.onChange} />\n                    <br/>\n                    Appearances: <input name=\"appearances\" value={student.appearances} onChange={this.onChange} />\n\n                    <button type=\"submit\">Submit</button>\n                    <Link to=\"/students\">Back to student list</Link>\n                </form>\n            </div>\n        );\n    }\n}\n\nStudentEdit.propTypes = {\n    params:React.PropTypes.object.isRequired,\n};\n\n\n// WEBPACK FOOTER //\n// ./src/StudentEdit.jsx"],"sourceRoot":""}